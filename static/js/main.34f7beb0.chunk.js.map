{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","_ref","user","_jsx","className","href","concat","email","children","name","TodoInfo","todo","id","completed","title","_jsxs","cn","TodoList","todos","map","username","userId","App","setTitle","useState","visibleTodos","setVisibleTodos","todosFromServer","isValidTitle","setIsValidTitle","isValidUser","setIsValidUser","targetUser","setTargetUser","todoAndUser","usersFromServer","find","action","method","onSubmit","event","preventDefault","trim","Math","max","htmlFor","onChange","target","value","changeTitle","type","placeholder","defaultValue","changeUser","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34f7beb0.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { TodoAndUser } from '../../types/TodoAndUsers';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: TodoAndUser;\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id, completed, title, user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoAndUser } from '../../types/TodoAndUsers';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: TodoAndUser[];\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        return (\n          <TodoInfo key={todo.id} todo={todo} />\n        );\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [visibleTodos, setVisibleTodos] = useState(todosFromServer);\n  const [isValidTitle, setIsValidTitle] = useState(false);\n  const [isValidUser, setIsValidUser] = useState(false);\n  const [targetUser, setTargetUser] = useState(0);\n\n  const findUser = (id: number) => {\n    return usersFromServer.find(user => user.id === id) as User;\n  };\n\n  const todoAndUser = visibleTodos.map(todo => ({\n    ...todo,\n    user: findUser(todo.userId),\n  }));\n\n  const getId = () => {\n    return Math.max(...visibleTodos.map(todo => todo.id));\n  };\n\n  const reset = () => {\n    setTitle('');\n    setIsValidUser(false);\n    setIsValidTitle(false);\n    setTargetUser(0);\n  };\n\n  const newTodoAdd = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setIsValidTitle(true);\n      setTitle('');\n    }\n\n    if (!targetUser) {\n      setIsValidUser(true);\n    }\n\n    if (title.trim() && targetUser) {\n      setVisibleTodos(\n        [...visibleTodos,\n          {\n            id: getId() + 1,\n            title,\n            completed: false,\n            userId: targetUser,\n          }],\n      );\n\n      reset();\n    }\n  };\n\n  const changeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsValidTitle(false);\n  };\n\n  const changeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTargetUser(+event.target.value);\n    setIsValidUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={newTodoAdd}\n      >\n\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            Title:&nbsp;\n          </label>\n          <input\n            onChange={event => changeTitle(event)}\n            value={title}\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n          />\n          {isValidTitle && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userPick\">\n            User:&nbsp;\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            defaultValue={0}\n            value={targetUser}\n            onChange={event => changeUser(event)}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isValidUser && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoAndUser} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}